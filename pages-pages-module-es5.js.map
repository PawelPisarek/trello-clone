{"version":3,"sources":["webpack:///src/app/main/card-list/card-list.component.ts","webpack:///src/app/main/card-list/card-list.component.html","webpack:///src/app/main/models/card-collector.model.ts","webpack:///src/app/main/models/card.model.ts","webpack:///src/app/main/models/task-new.model.ts","webpack:///src/app/main/task-form/task-form.component.ts","webpack:///src/app/main/task-form/task-form.component.html","webpack:///src/app/pages/miscellaneous/miscellaneous-routing.module.ts","webpack:///src/app/pages/miscellaneous/miscellaneous.component.ts","webpack:///src/app/pages/miscellaneous/miscellaneous.module.ts","webpack:///src/app/pages/miscellaneous/not-found/not-found.component.ts","webpack:///src/app/pages/miscellaneous/not-found/not-found.component.html","webpack:///src/app/pages/pages-menu.ts","webpack:///src/app/pages/pages-routing.module.ts","webpack:///src/app/pages/pages.component.ts","webpack:///src/app/pages/pages.module.ts"],"names":["CardListComponent","dialogService","allLists","allCards","reduce","p","c","set","title","cards","Map","event","previousContainer","container","get","data","previousIndex","currentIndex","dialogNamePromptComponentNbDialogRef","open","componentRef","instance","cardCollectorModels","onClose","pipe","subscribe","name","cardTitle","taskName","addCard","selector","templateUrl","styleUrls","CardCollectorModel","CardModel","TaskNewModel","TaskFormComponent","ref","form","patchValue","close","value","cancel","submit","routes","path","component","children","MiscellaneousRoutingModule","forChild","imports","exports","MiscellaneousComponent","template","MiscellaneousModule","declarations","NotFoundComponent","menuService","navigateHome","goToHome","MENU_ITEMS","icon","link","home","loadChildren","then","m","redirectTo","pathMatch","PagesRoutingModule","PagesComponent","menu","PagesModule"],"mappings":"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","file":"pages-pages-module-es5.js","sourcesContent":["import {Component} from '@angular/core';\nimport {CardCollectorModel} from '../models/card-collector.model';\nimport {CardModel} from '../models/card.model';\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\nimport {NbDialogService} from '@nebular/theme';\nimport {TaskNewModel} from '../models/task-new.model';\nimport {take} from 'rxjs/operators';\nimport {TaskFormComponent} from '../task-form/task-form.component';\n\n@Component({\n  selector: 'ngx-card-list',\n  templateUrl: './card-list.component.html',\n  styleUrls: ['./card-list.component.scss'],\n})\nexport class CardListComponent {\n\n  constructor(private dialogService: NbDialogService) {\n  }\n\n  allLists = [\n    new CardCollectorModel('TODO', [\n      new CardModel('Trello Clone'), new CardModel('Recipe Management App'), new CardModel('Brainstorm Group Project Ideas')]),\n    new CardCollectorModel('IN PROGRESS', [\n      new CardModel('DocGawk API'), new CardModel('ICE Raid Tracker'),\n      new CardModel('Island Pie Pizza Website'), new CardModel('Keg Inventory System')]),\n    new CardCollectorModel('TEST', [\n      new CardModel('Professional Portfolio'), new CardModel('Personal Blog/Website'), new CardModel('Grocery Budgeting Tool')]),\n    new CardCollectorModel('DONE', [\n      new CardModel('Professional Portfolio'), new CardModel('Personal Blog/Website'), new CardModel('Grocery Budgeting Tool')]),\n  ];\n  allCards: Map<string, CardModel[]> = this.allLists.reduce((p, c) => {\n    p.set(c.title, c.cards);\n    return p;\n  }, new Map());\n\n  drop(event: CdkDragDrop<string>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(this.allCards.get(event.container.data), event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(this.allCards.get(event.previousContainer.data),\n        this.allCards.get(event.container.data),\n        event.previousIndex,\n        event.currentIndex);\n    }\n  }\n\n  addCard() {\n    const dialogNamePromptComponentNbDialogRef = this.dialogService.open(TaskFormComponent);\n    dialogNamePromptComponentNbDialogRef.componentRef.instance.cardCollectorModels = this.allLists;\n    dialogNamePromptComponentNbDialogRef\n      .onClose.pipe(take(1)).subscribe((name: TaskNewModel) => {\n      if (name) {\n        this.allCards.set(name.cardTitle.title, [\n          ...this.allCards.get(name.cardTitle.title), new CardModel(name.taskName)]);\n      }\n    });\n  }\n}\n","<div cdkDropListGroup class=\"cards-list-container\">\n  <div *ngFor=\"let row of allLists\" class=\"card\">\n    <h2 class=\"p-3\">{{row.title}}</h2>\n    <div\n      cdkDropList\n      [cdkDropListData]=\"row.title\"\n      class=\"card-list\"\n      (cdkDropListDropped)=\"drop($event)\">\n      <div class=\"card-box\" *ngFor=\"let item of allCards.get(row.title)\" cdkDrag>{{item.title}}</div>\n    </div>\n  </div>\n</div>\n<div class=\"add\">\n  <button mat-fab (click)=\"addCard()\">\n    <mat-icon>add</mat-icon>\n  </button>\n</div>\n","import {CardModel} from './card.model';\n\nexport class CardCollectorModel {\n  constructor(public title: string, public cards: CardModel[]) { }\n}\n","export class CardModel {\n  constructor(public title: string) { }\n}\n","import {CardCollectorModel} from './card-collector.model';\n\nexport class TaskNewModel {\n  constructor(\n    public taskName: string, public cardTitle: CardCollectorModel) {\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {CardCollectorModel} from '../models/card-collector.model';\nimport {NbDialogRef} from '@nebular/theme';\nimport {TaskNewModel} from '../models/task-new.model';\n\n@Component({\n  selector: 'ngx-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.scss'],\n})\nexport class TaskFormComponent implements OnInit {\n\n  form = new FormControl();\n  cardCollectorModels: CardCollectorModel[];\n\n  constructor(protected ref: NbDialogRef<TaskFormComponent>) {\n  }\n\n  ngOnInit(): void {\n    this.form.patchValue(this.cardCollectorModels[0]);\n  }\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit(taskName: string) {\n    this.ref.close(new TaskNewModel(taskName, this.form.value));\n  }\n}\n","<nb-card>\n  <nb-card-header>Task name</nb-card-header>\n  <nb-card-body>\n    <input #name nbInput placeholder=\"Name\">\n  </nb-card-body>\n  <nb-card>\n    <nb-card-header>Select step</nb-card-header>\n    <nb-card-body>\n      <nb-select class=\"w-100\" placeholder=\"todo, in progress\" [formControl]=\"form\">\n        <nb-option *ngFor=\"let item of cardCollectorModels\" [value]=\"item\">{{item.title}}</nb-option>\n      </nb-select>\n    </nb-card-body>\n  </nb-card>\n  <nb-card-footer>\n    <button class=\"cancel\" nbButton status=\"danger\" (click)=\"cancel()\">Cancel</button>\n    <button nbButton status=\"success\" (click)=\"submit(name.value)\">Submit</button>\n  </nb-card-footer>\n</nb-card>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MiscellaneousComponent } from './miscellaneous.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MiscellaneousComponent,\n    children: [\n      {\n        path: '404',\n        component: NotFoundComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MiscellaneousRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-miscellaneous',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class MiscellaneousComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { NbButtonModule, NbCardModule } from '@nebular/theme';\n\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { MiscellaneousRoutingModule } from './miscellaneous-routing.module';\nimport { MiscellaneousComponent } from './miscellaneous.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n@NgModule({\n  imports: [\n    ThemeModule,\n    NbCardModule,\n    NbButtonModule,\n    MiscellaneousRoutingModule,\n  ],\n  declarations: [\n    MiscellaneousComponent,\n    NotFoundComponent,\n  ],\n})\nexport class MiscellaneousModule { }\n","import { NbMenuService } from '@nebular/theme';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-not-found',\n  styleUrls: ['./not-found.component.scss'],\n  templateUrl: './not-found.component.html',\n})\nexport class NotFoundComponent {\n\n  constructor(private menuService: NbMenuService) {\n  }\n\n  goToHome() {\n    this.menuService.navigateHome();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <nb-card>\n      <nb-card-body>\n        <div class=\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\">\n          <h2 class=\"title\">404 Page Not Found</h2>\n          <small class=\"sub-title\">The page you were looking for doesn't exist</small>\n          <button nbButton fullWidth (click)=\"goToHome()\" type=\"button\" class=\"home-button\">\n            Take me home\n          </button>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import { NbMenuItem } from '@nebular/theme';\n\nexport const MENU_ITEMS: NbMenuItem[] = [\n  {\n    title: 'dashboard',\n    icon: '',\n    link: '/pages/dashboard',\n    home: true,\n  },\n];\n","import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\n\nimport {PagesComponent} from './pages.component';\nimport {NotFoundComponent} from './miscellaneous/not-found/not-found.component';\nimport {CardListComponent} from '../main/card-list/card-list.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: PagesComponent,\n  children: [\n    {\n      path: 'dashboard',\n      component: CardListComponent,\n    },\n    {\n      path: 'miscellaneous',\n      loadChildren: () => import('./miscellaneous/miscellaneous.module')\n        .then(m => m.MiscellaneousModule),\n    },\n    {\n      path: '',\n      redirectTo: 'dashboard',\n      pathMatch: 'full',\n    },\n    {\n      path: '**',\n      component: NotFoundComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule {\n}\n","import { Component } from '@angular/core';\n\nimport { MENU_ITEMS } from './pages-menu';\n\n@Component({\n  selector: 'ngx-pages',\n  styleUrls: ['pages.component.scss'],\n  template: `\n    <ngx-one-column-layout>\n      <nb-menu [items]=\"menu\"></nb-menu>\n      <router-outlet></router-outlet>\n    </ngx-one-column-layout>\n  `,\n})\nexport class PagesComponent {\n\n  menu = MENU_ITEMS;\n}\n","import { NgModule } from '@angular/core';\nimport { NbMenuModule } from '@nebular/theme';\n\nimport { ThemeModule } from '../@theme/theme.module';\nimport { PagesComponent } from './pages.component';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { MiscellaneousModule } from './miscellaneous/miscellaneous.module';\n\n@NgModule({\n  imports: [\n    PagesRoutingModule,\n    ThemeModule,\n    NbMenuModule,\n    MiscellaneousModule,\n  ],\n  declarations: [\n    PagesComponent,\n  ],\n})\nexport class PagesModule {\n}\n"]}